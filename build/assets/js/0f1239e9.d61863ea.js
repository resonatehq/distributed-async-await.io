"use strict";(self.webpackChunkresonate=self.webpackChunkresonate||[]).push([[106],{246:(e,s,n)=>{n.d(s,{A:()=>i});const i=n.p+"assets/images/distributed-coordination-protocol-immediate-resumption-sequence-841ae695a7ff31f1d61a6ca62dc81a85.svg"},5255:(e,s,n)=>{n.d(s,{A:()=>i});const i=n.p+"assets/images/distributed-coordination-protocol-eventual-resumption-sequence-d0e5d571ed2a5c700069cf759b00bad0.svg"},5476:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"specification/distributed-coordination-protocol","title":"Distributed Coordination Protocol","description":"The Distributed Coordination Protocol is responsible for the coordination of distributed function executions.","source":"@site/docs/specification/distributed-coordination-protocol.mdx","sourceDirName":"specification","slug":"/specification/distributed-coordination-protocol","permalink":"/specification/distributed-coordination-protocol","draft":false,"unlisted":false,"editUrl":"https://github.com/resonatehq/daa-spec.resonatehq.io/tree/main/docs/specification/distributed-coordination-protocol.mdx","tags":[],"version":"current","frontMatter":{"id":"distributed-coordination-protocol","title":"Distributed Coordination Protocol","sidebar_label":"Distributed Coordination Protocol"},"sidebar":"defaultSidebar","previous":{"title":"Specification","permalink":"/specification/"},"next":{"title":"Distributed Recovery Protocol","permalink":"/specification/distributed-recovery-protocol"}}');var r=n(4848),t=n(8453);const o={id:"distributed-coordination-protocol",title:"Distributed Coordination Protocol",sidebar_label:"Distributed Coordination Protocol"},c=void 0,d={},l=[{value:"Eventual Resumption",id:"eventual-resumption",level:2},{value:"Immediate Resumption",id:"immediate-resumption",level:2}];function h(e){const s={h2:"h2",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:["The ",(0,r.jsx)(s.strong,{children:"Distributed Coordination Protocol"})," is responsible for the coordination of distributed function executions."]}),"\n",(0,r.jsx)(s.h2,{id:"eventual-resumption",children:"Eventual Resumption"}),"\n",(0,r.jsxs)(s.p,{children:["Eventual resumption occurs when when the calling execution E",(0,r.jsx)("sub",{children:"1"})," awaits a promise P",(0,r.jsx)("sub",{children:"2"})," that is not yet resolved.\nThe calling execution E",(0,r.jsx)("sub",{children:"1"})," is suspended until the promise P",(0,r.jsx)("sub",{children:"2"})," is resolved or rejected."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.img,{alt:"Distributed Coordination Protocol sequence diagram",src:n(5255).A+"",width:"1602",height:"1682"})}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["When the calling execution E",(0,r.jsx)("sub",{children:"1"}),", identified by Durable Promise P",(0,r.jsx)("sub",{children:"1"})," and hosted on worker W",(0,r.jsx)("sub",{children:"1"}),", invokes a function remotely, W",(0,r.jsx)("sub",{children:"1"})," sends a request to create a Durable Promise (P",(0,r.jsx)("sub",{children:"2"}),") to the server S."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Upon receiving the request, the server S creates the durable promise P",(0,r.jsx)("sub",{children:"2"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["The Server S sends a response to W",(0,r.jsx)("sub",{children:"1"})," which forwards P",(0,r.jsx)("sub",{children:"2"})," to E",(0,r.jsx)("sub",{children:"1"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["The server S sends an Invoke(P",(0,r.jsx)("sub",{children:"2"}),") message to process group G",(0,r.jsx)("sub",{children:"B"}),", here delivered to worker W",(0,r.jsx)("sub",{children:"2"})]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Worker W",(0,r.jsx)("sub",{children:"2"})," spawns execution E",(0,r.jsx)("sub",{children:"2"})]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["When the calling execution E",(0,r.jsx)("sub",{children:"1"})," awaits promise P",(0,r.jsx)("sub",{children:"2"}),", W",(0,r.jsx)("sub",{children:"1"})," sends a request to register a callback Resume(P",(0,r.jsx)("sub",{children:"1"}),", P",(0,r.jsx)("sub",{children:"2"}),") deliverable to G",(0,r.jsx)("sub",{children:"A"})," with preference W",(0,r.jsx)("sub",{children:"1"})," on P",(0,r.jsx)("sub",{children:"2"})," to server S"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Upon receiving the request, since P",(0,r.jsx)("sub",{children:"2"})," is still pending, server S registers the callback C",(0,r.jsx)("sub",{children:"1"})," with promise P",(0,r.jsx)("sub",{children:"2"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Server S sends a response indicating success to worker W",(0,r.jsx)("sub",{children:"1"}),", which suspends E",(0,r.jsx)("sub",{children:"1"})]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["When the called execution E",(0,r.jsx)("sub",{children:"2"})," returns, the worker W",(0,r.jsx)("sub",{children:"2"})," sends a request to resolve or reject durable promise P",(0,r.jsx)("sub",{children:"2"})," to the server S"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Upon receiving the request, the server S resolves or rejects the durable promise P",(0,r.jsx)("sub",{children:"2"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Server S sends a response containing P",(0,r.jsx)("sub",{children:"2"})," to W",(0,r.jsx)("sub",{children:"2"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["12.The server S sends a Resume(P",(0,r.jsx)("sub",{children:"1"}),", P",(0,r.jsx)("sub",{children:"2"}),") message to process group G",(0,r.jsx)("sub",{children:"A"})," with the preference of W",(0,r.jsx)("sub",{children:"1"}),", here delivered to worker W",(0,r.jsx)("sub",{children:"1"}),", which suspends E",(0,r.jsx)("sub",{children:"1"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"immediate-resumption",children:"Immediate Resumption"}),"\n",(0,r.jsxs)(s.p,{children:["Immediate resumption occurs when the calling execution E",(0,r.jsx)("sub",{children:"1"})," awaits a promise P",(0,r.jsx)("sub",{children:"2"})," that is already resolved."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.img,{alt:"Distributed Coordination Protocol sequence diagram",src:n(246).A+"",width:"1602",height:"1522"})}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["When the calling execution E",(0,r.jsx)("sub",{children:"1"}),", identified by durable promise P",(0,r.jsx)("sub",{children:"1"})," and hosted on worker W",(0,r.jsx)("sub",{children:"1"}),", invokes a function remotely, W",(0,r.jsx)("sub",{children:"1"})," sends a request to create a durable promise P",(0,r.jsx)("sub",{children:"2"})," to the server S."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Upon receiving the request, the server S creates the durable promise P",(0,r.jsx)("sub",{children:"2"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Server S sends a response to W",(0,r.jsx)("sub",{children:"1"}),", which forwards P",(0,r.jsx)("sub",{children:"2"})," to E",(0,r.jsx)("sub",{children:"1"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["The server S sends an Invoke(P",(0,r.jsx)("sub",{children:"2"}),") message to process group G",(0,r.jsx)("sub",{children:"B"}),", here delivered to worker W",(0,r.jsx)("sub",{children:"2"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Worker W",(0,r.jsx)("sub",{children:"2"})," spawns execution E",(0,r.jsx)("sub",{children:"2"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["When the called execution E",(0,r.jsx)("sub",{children:"2"})," returns, the worker W",(0,r.jsx)("sub",{children:"2"})," sends a request to resolve or reject durable promise P",(0,r.jsx)("sub",{children:"2"})," to the server S."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Upon receiving the request, the server S resolves or rejects the durable promise P",(0,r.jsx)("sub",{children:"2"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Server S sends a response containing P",(0,r.jsx)("sub",{children:"2"})," to W",(0,r.jsx)("sub",{children:"2"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["When the calling execution E",(0,r.jsx)("sub",{children:"1"})," awaits promise P",(0,r.jsx)("sub",{children:"2"}),", W",(0,r.jsx)("sub",{children:"1"})," sends a request to register a callback Resume(P",(0,r.jsx)("sub",{children:"1"}),", P",(0,r.jsx)("sub",{children:"2"}),") deliverable to G",(0,r.jsx)("sub",{children:"A"})," with preference W",(0,r.jsx)("sub",{children:"1"})," on P",(0,r.jsx)("sub",{children:"2"})," to server S."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Upon receiving the request, since P",(0,r.jsx)("sub",{children:"2"})," is already completed, server S ",(0,r.jsx)(s.strong,{children:"does not"})," register a callback."]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:["Server S sends a response indicating the callback was not registered because the promise is already completed to worker W",(0,r.jsx)("sub",{children:"1"}),", which resumes E",(0,r.jsx)("sub",{children:"1"}),"."]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>c});var i=n(6540);const r={},t=i.createContext(r);function o(e){const s=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);